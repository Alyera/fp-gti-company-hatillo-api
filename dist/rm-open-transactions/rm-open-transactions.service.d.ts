import { CreateRmOpenTransactionInput } from './dto/create-rm-open-transaction.input';
import { UpdateRmOpenTransactionInput } from './dto/update-rm-open-transaction.input';
import { PrismaService } from 'src/prisma/prisma.service';
export declare class RmOpenTransactionsService {
    private prisma;
    constructor(prisma: PrismaService);
    create(createRmOpenTransactionInput: CreateRmOpenTransactionInput): string;
    findAll(): import(".prisma/client").Prisma.PrismaPromise<{
        CUSTNMBR: string;
        CPRCSTNM: string;
        DOCNUMBR: string;
        CHEKNMBR: string;
        BACHNUMB: string;
        BCHSOURC: string;
        TRXSORCE: string;
        RMDTYPAL: number;
        CSHRCTYP: number;
        CBKIDCRD: string;
        CBKIDCSH: string;
        CBKIDCHK: string;
        DUEDATE: Date;
        DOCDATE: Date;
        POSTDATE: Date;
        PSTUSRID: string;
        GLPOSTDT: Date;
        LSTEDTDT: Date;
        LSTUSRED: string;
        ORTRXAMT: import("@prisma/client/runtime/library").Decimal;
        CURTRXAM: import("@prisma/client/runtime/library").Decimal;
        SLSAMNT: import("@prisma/client/runtime/library").Decimal;
        COSTAMNT: import("@prisma/client/runtime/library").Decimal;
        FRTAMNT: import("@prisma/client/runtime/library").Decimal;
        MISCAMNT: import("@prisma/client/runtime/library").Decimal;
        TAXAMNT: import("@prisma/client/runtime/library").Decimal;
        COMDLRAM: import("@prisma/client/runtime/library").Decimal;
        CASHAMNT: import("@prisma/client/runtime/library").Decimal;
        DISTKNAM: import("@prisma/client/runtime/library").Decimal;
        DISAVAMT: import("@prisma/client/runtime/library").Decimal;
        DISAVTKN: import("@prisma/client/runtime/library").Decimal;
        DISCRTND: import("@prisma/client/runtime/library").Decimal;
        DISCDATE: Date;
        DSCDLRAM: import("@prisma/client/runtime/library").Decimal;
        DSCPCTAM: number;
        WROFAMNT: import("@prisma/client/runtime/library").Decimal;
        TRXDSCRN: string;
        CSPORNBR: string;
        SLPRSNID: string;
        SLSTERCD: string;
        DINVPDOF: Date;
        PPSAMDED: import("@prisma/client/runtime/library").Decimal;
        GSTDSAMT: import("@prisma/client/runtime/library").Decimal;
        DELETE1: number;
        AGNGBUKT: number;
        VOIDSTTS: number;
        VOIDDATE: Date;
        TAXSCHID: string;
        CURNCYID: string;
        PYMTRMID: string;
        SHIPMTHD: string;
        TRDISAMT: import("@prisma/client/runtime/library").Decimal;
        SLSCHDID: string;
        FRTSCHID: string;
        MSCSCHID: string;
        NOTEINDX: import("@prisma/client/runtime/library").Decimal;
        Tax_Date: Date;
        APLYWITH: number;
        SALEDATE: Date;
        CORRCTN: number;
        SIMPLIFD: number;
        Electronic: number;
        ECTRX: number;
        BKTSLSAM: import("@prisma/client/runtime/library").Decimal;
        BKTFRTAM: import("@prisma/client/runtime/library").Decimal;
        BKTMSCAM: import("@prisma/client/runtime/library").Decimal;
        BackoutTradeDisc: import("@prisma/client/runtime/library").Decimal;
        Factoring: number;
        DIRECTDEBIT: number;
        ADRSCODE: string;
        EFTFLAG: number;
        DEX_ROW_TS: Date;
        DEX_ROW_ID: number;
    }[]>;
    findOne(DOCNUMBR: string): string;
    update(id: number, updateRmOpenTransactionInput: UpdateRmOpenTransactionInput): string;
    remove(id: number): string;
}
